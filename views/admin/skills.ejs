<form id="form" class="border-[gray] border-[2px] rounded-[10px] w-[60%] p-[10px] mt-[40px] flex flex-row justify-start items-center">
    <div class="w-1/2 flex flex-col justify-start items-center">
        <label for="category">Catégorie de la compétence</label>
        <select class="border-[2px] border-[gray] rounded-[5px]" name="category" id="category" required>
            <option value="" selected disabled hidden>choisisser</option>
            <option value="langage informatique">langage informatique</option>
            <option value="software">software</option>
            <option value="hardware">hardware</option>
            <option value="réseau">réseau</option>
            <option value="modélisation">modélisation</option>
            <option value="électronique">électronique</option>
        </select>
        <label for="name">Nom</label>
        <input class="border-[gray] border-[2px] rounded-[5px] px-[5px]" id="name" name="name" type="text" required>
        <label for="ref">Référence</label>
        <input class="border-[gray] border-[2px] rounded-[5px] px-[5px]" id="ref" name="ref" type="url" required>
        <button class="mt-[20px] py-[5px] px-[10px] bg-B border-A border-[2px] rounded-[5px] text-[white] transition hover:scale-110" type="submit">Créer</button>
    </div>
    <div class="w-1/2 flex flex-col justify-start items-center h-full">
        <label for="date">Première utilisation en</label>
        <input class="border-[gray] border-[2px] rounded-[5px] px-[5px]" id="date" name="date" type="number" min="1900" max="2099" step="1" required/>
        <label for="logo">Logo</label>
        <input class="border-[gray] border-[2px] rounded-[5px] px-[5px]" id="logo" name="logo" type="text" required>
        <label for="commentaire">Commentaire</label>
        <textarea class="border-[gray] border-[2px] w-[90%] rounded-[5px] px-[5px]" name="commentaire" id="com" required ></textarea>
    </div>
</form>
<label id="labelInfo"></label>

<div class="flex flex-row w-[400px] justify-around items-end mt-[20px]">
    <div class="flex flex-col justify-start items-center">
        <span>Catégorie</span>
        <select class="border-[2px] border-[gray] rounded-[5px]" id="category/2" onchange="listComponent.listSkills.refresh({ category: document.getElementById('category/2').value})">
            <option value="">tout</option>
            <option value="langage informatique">langage informatique</option>
            <option value="software">software</option>
            <option value="hardware">hardware</option>
            <option value="réseau">réseau</option>
            <option value="modélisation">modélisation</option>
            <option value="électronique">électronique</option>
        </select>
    </div>
</div>

<div id="component" class="animate-pulse pointer-events-none" title="listSkills"></div>

<script>
    document.getElementById("form").addEventListener("submit", (event) => { 
        event.preventDefault()

        seeInfo("En attente d'une réponse du serveur...")
        toModule("postSkills", {
            category: document.getElementById("category").value,
            name: document.getElementById("name").value, 
            date: document.getElementById("date").value, 
            ref: document.getElementById("ref").value, 
            com: document.getElementById("com").value,
            logo: document.getElementById("logo").value,
            visible: false
        }).then((rep) => {
            document.getElementById("category").value = ""
            document.getElementById("name").value = ""
            document.getElementById("date").value = ""
            document.getElementById("ref").value = ""
            document.getElementById("com").value = ""
            document.getElementById("logo").value = ""
            listComponent.listSkills.refresh({ category: document.getElementById('category/2').value, page: document.getElementById('page').innerText})
            deleteInfo()
        }).catch((rep) => {
            deleteInfo()
        })
    })

    const editskill = (old, category, name, date, ref, com, logo) => {
        seeInfo("En attente d'une réponse du serveur...")
        toModule("replaceSkill", {
            oldName: old,
            category: category,
            name: name, 
            date: date, 
            ref: ref,
            com: com,
            logo: logo,
        }).then((rep) => {
            listComponent.listSkills.refresh({ category: document.getElementById('category/2').value, page: document.getElementById('page').innerText})
            deleteInfo()
        }).catch((rep) => {
            deleteInfo()
        })
    }

    function checkChange(pid){
        toModule("visibleSkill", {
            Pid: pid,
            visible: document.getElementById("check/" + pid).checked
        }, " ")
    }
</script>