<form id="form" class="border-[gray] border-[2px] rounded-[10px] w-[60%] p-[10px] mt-[40px] flex flex-row justify-start items-center">
    <div class="w-1/2 flex flex-col justify-start items-center">
        <label for="category">Catégorie de l'expérience</label>
        <select class="border-[2px] border-[gray] rounded-[5px]" name="category" id="category" required>
            <option value="" selected disabled hidden>choisisser</option>
            <option value="employé">employé</option>
            <option value="stagiaire">stagiaire</option>
            <option value="non-officiel">non-officiel</option>
        </select>
        <label for="name">Nom de l'entreprise</label>
        <input class="border-[gray] border-[2px] rounded-[5px] px-[5px]" id="name" name="name" type="text" required>
        <label for="ref">Référence</label>
        <input class="border-[gray] border-[2px] rounded-[5px] px-[5px]" id="ref" name="ref" type="url" required>
        <label for="logo">Logo</label>
        <input class="border-[gray] border-[2px] rounded-[5px] px-[5px]" id="logo" name="logo" type="text" required>
        <button class="mt-[20px] py-[5px] px-[10px] bg-B border-A border-[2px] rounded-[5px] text-[white] transition hover:scale-110" type="submit">Créer</button>
    </div>
    <div class="w-1/2 flex flex-col justify-start items-center h-full">
        <label for="date">Date de l'expérience</label>
        <div class="flex flex-col justify-start items-center">
            <input class="border-[2px] border-[gray] rounded-[5px]" id="date1" type="date">
            au
            <input class="border-[2px] border-[gray] rounded-[5px]" id="date2" type="date">
        </div>
        <label for="commentaire">Commentaire</label>
        <textarea class="border-[gray] border-[2px] w-[90%] rounded-[5px] px-[5px]" name="commentaire" id="com" required ></textarea>
    </div>
</form>

<label id="labelInfo"></label>

<div class="flex flex-row w-[400px] justify-around items-end mt-[20px]">
    <div class="flex flex-col justify-start items-center">
        <span>Catégorie</span>
        <select class="border-[2px] border-[gray] rounded-[5px]" id="category/2" onchange="listComponent.professionalExp.refresh({ category: document.getElementById('category/2').value })">
            <option value="">tout</option>
            <option value="employé">employé</option>
            <option value="stagiaire">stagiaire</option>
            <option value="non-officiel">non-officiel</option>
        </select>
    </div>
</div>

<div id="component" title="professionalExp" class="hidden"></div>

<script>
    document.getElementById("form").addEventListener("submit", (event) => { 
        event.preventDefault()

        seeInfo("En attente d'une réponse du serveur...")
        toModule("postProfessionalExp", {
            Pid: Date.now().toString(),
            category: document.getElementById("category").value,
            name: document.getElementById("name").value, 
            date1: Date.parse(document.getElementById("date1").value),
            date2: Date.parse(document.getElementById("date2").value),
            ref: document.getElementById("ref").value, 
            com: document.getElementById("com").value,
            logo: document.getElementById("logo").value,
            visible: false
        }).then((rep) => {
            document.getElementById("category").value = ""
            document.getElementById("name").value = ""
            document.getElementById("date1").value = ""
            document.getElementById("date2").value = ""
            document.getElementById("ref").value = ""
            document.getElementById("com").value = ""
            document.getElementById("logo").value = ""
            listComponent.professionalExp.refresh({ category: document.getElementById('category/2').value, page: document.getElementById('page').value })
            deleteInfo()
        }).catch((rep) => {
            deleteInfo()
        })
    })

    const editPE = (id, category, name, date1, date2, ref, com, logo) => {
        seeInfo("En attente d'une réponse du serveur...")
        toModule("replaceProfessionalExp", {
            Pid: id,
            category: category,
            name: name, 
            date1: Date.parse(date1),
            date2: Date.parse(date2),
            ref: ref,
            com: com,
            logo: logo,
        }).then((rep) => {
            listComponent.professionalExp.refresh({ category: document.getElementById('category/2').value, page: document.getElementById('page').innerText })
            deleteInfo()
        }).catch((rep) => {
            deleteInfo()
        })
        
    }

    function checkChange(pid){
        toModule("visibleProfessionalExp", {
            Pid: pid,
            visible: document.getElementById("check/" + pid).checked
        }, " ")
    }
</script>